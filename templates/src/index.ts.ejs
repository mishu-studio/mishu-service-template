import { cors } from '@elysiajs/cors'
import { authController } from '@/controllers/authController'
<% if (features.includes('GraphQL')) { -%>
import yoga from '@elysiajs/graphql-yoga'
import { resolvers, typeDefs } from '@/graphql'
<% } -%>
<% if (database === 'MongoDB') { -%>
import { connectToMongo } from '@/libs/mongo'
<% } -%>
<% if (features.includes('GraphQL')) { -%>
import prisma from '@/libs/prisma'
import { graphqlAuthMiddleware } from '@/middleware/auth'
<% } -%>
import { env } from 'bun'
import { Elysia } from 'elysia'

const PORT = env.PORT
<% if (database === 'MongoDB') { -%>

connectToMongo()
<% } -%>

if (!PORT) {
  console.error('❌ Please provide a PORT in .env file')
  process.exit(1)
}

const app = new Elysia()
  .use(cors())
  .get('/', () => 'Hello Mishu')
  <% if (features.includes('GraphQL')) { -%>
  .use(
    yoga({
      typeDefs,
      context: async ({ request }) => {
        const user = await graphqlAuthMiddleware(request)
        return { prisma, request, user }
      },
      resolvers
    })
  )
  <% } -%>
  .use(authController)
  .listen(PORT)

console.log(`🦊 Elysia is running at ${app.server?.hostname}:${app.server?.port}`)
